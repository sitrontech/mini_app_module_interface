// ===============================================
// lib/src/navigation/navigation_service.dart
// ===============================================
//
// ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô Navigation Service ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á modules
// ‡πÉ‡∏ô‡∏ù‡∏±‡πà‡∏á Host Application ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö routing registry ‡πÅ‡∏•‡∏∞ custom handler
// ‡∏ó‡∏≥‡πÉ‡∏´‡πâ host app ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£ navigate ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô

import 'package:flutter/foundation.dart';

/// Host navigation service interface
///
/// Service ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ navigation ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á modules
/// ‡πÇ‡∏î‡∏¢ host application ‡∏à‡∏∞‡πÉ‡∏ä‡πâ service ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£:
/// 1. ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô routes ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ module
/// 2. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ navigation requests ‡∏à‡∏≤‡∏Å modules
/// 3. Customize ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£ navigate ‡∏ú‡πà‡∏≤‡∏ô custom handler
///
/// ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô ‡πÇ‡∏î‡∏¢ host ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:
/// - ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö route registration ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
/// - ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ custom handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö logic ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
class HostNavigationService {
  // ============================================
  // Private Properties
  // ============================================

  /// Map ‡πÄ‡∏Å‡πá‡∏ö routes ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ module
  ///
  /// Structure: {moduleId: route}
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
  /// ```dart
  /// {
  ///   'payment': '/payment',
  ///   'profile': '/user/profile',
  ///   'settings': '/app/settings'
  /// }
  /// ```
  ///
  /// ‡πÉ‡∏ä‡πâ Map ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô routing table ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ navigate
  final Map<String, String> _moduleRoutes = {};

  /// Custom handler function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ navigation
  ///
  /// Function signature:
  /// - Parameter 1: moduleId - ID ‡∏Ç‡∏≠‡∏á module ‡∏ó‡∏µ‡πà‡∏à‡∏∞ navigate ‡πÑ‡∏õ
  /// - Parameter 2: data - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö navigation request
  ///
  /// ‡∏ñ‡πâ‡∏≤ custom handler ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡∏à‡∏∞‡πÉ‡∏ä‡πâ handler ‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏£‡∏∞‡∏ö‡∏ö routing ‡∏õ‡∏Å‡∏ï‡∏¥
  /// ‡∏ó‡∏≥‡πÉ‡∏´‡πâ host app ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ implement custom navigation logic ‡πÑ‡∏î‡πâ
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// void myCustomHandler(String moduleId, Map<String, dynamic> data) {
  ///   if (moduleId == 'payment' && !userIsLoggedIn) {
  ///     navigateToLogin();
  ///   } else {
  ///     navigateToModule(moduleId, data);
  ///   }
  /// }
  /// ```
  final void Function(String moduleId, Map<String, dynamic> data)? _customHandler;

  /// Constructor ‡∏û‡∏£‡πâ‡∏≠‡∏° optional parameters
  ///
  /// Parameters:
  /// - [moduleRoutes]: Map ‡∏Ç‡∏≠‡∏á routes ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (optional)
  /// - [customHandler]: Custom navigation handler (optional)
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á:
  /// ```dart
  /// // ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ route registration
  /// final service = HostNavigationService(
  ///   moduleRoutes: {
  ///     'payment': '/payment',
  ///     'profile': '/profile'
  ///   }
  /// );
  ///
  /// // ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ custom handler
  /// final service = HostNavigationService(
  ///   customHandler: (moduleId, data) {
  ///     // Custom logic
  ///   }
  /// );
  /// ```
  HostNavigationService({
    Map<String, String>? moduleRoutes,
    void Function(String moduleId, Map<String, dynamic> data)? customHandler,
  }) : _customHandler = customHandler {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ initial routes ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ map
    if (moduleRoutes != null) {
      _moduleRoutes.addAll(moduleRoutes);
    }
  }

  // ============================================
  // Public Navigation Methods
  // ============================================

  /// Method ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö navigate ‡πÑ‡∏õ‡∏¢‡∏±‡∏á module
  ///
  /// Method ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ navigation request
  /// ‡∏à‡∏≤‡∏Å mini app ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏Ç‡∏≠‡∏á application
  ///
  /// Parameters:
  /// - [moduleId]: ID ‡∏Ç‡∏≠‡∏á module ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ navigate ‡πÑ‡∏õ
  /// - [navigationData]: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö request
  ///
  /// ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
  /// 1. Log navigation request
  /// 2. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ custom handler ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ handler
  /// 3. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ handler ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ registered routes
  /// 4. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö route ‡πÉ‡∏´‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ unknown module
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// service.navigateToModule('payment', {
  ///   'orderId': '12345',
  ///   'amount': 1500.00,
  ///   'timestamp': DateTime.now().toIso8601String()
  /// });
  /// ```
  void navigateToModule(String moduleId, Map<String, dynamic> navigationData) {
    // Debug logging - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• navigation
    debugPrint('üéØ HostNavigationService: Navigating to $moduleId');
    debugPrint('   Data: $navigationData');

    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ custom handler ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ handler ‡πÅ‡∏•‡∏∞‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    // Custom handler ‡∏°‡∏µ priority ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    if (_customHandler != null) {
      _customHandler!(moduleId, navigationData);
      return; // ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    }

    // Fallback: ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö route registration
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ route ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ
    final route = _moduleRoutes[moduleId];

    if (route != null) {
      // ‡∏û‡∏ö route - ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ navigate
      debugPrint('   Using registered route: $route');

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å default navigation
      // Host app ‡∏Ñ‡∏ß‡∏£ override behavior ‡∏ô‡∏µ‡πâ
      _defaultNavigation(moduleId, route, navigationData);
    } else {
      // ‡πÑ‡∏°‡πà‡∏û‡∏ö route - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ unknown module
      debugPrint('‚ùå No route registered for module: $moduleId');
      _handleUnknownModule(moduleId, navigationData);
    }
  }

  // ============================================
  // Route Registration Methods
  // ============================================

  /// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö module ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  ///
  /// ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° route mapping ‡∏ó‡∏µ‡∏•‡∏∞ module
  ///
  /// Parameters:
  /// - [moduleId]: ID ‡∏Ç‡∏≠‡∏á module
  /// - [route]: Route path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö module ‡∏ô‡∏±‡πâ‡∏ô
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// service.registerModuleRoute('payment', '/payment');
  /// service.registerModuleRoute('profile', '/user/profile');
  /// ```
  void registerModuleRoute(String moduleId, String route) {
    _moduleRoutes[moduleId] = route;
    debugPrint('üìù Registered route for $moduleId: $route');
  }

  /// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô routes ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
  ///
  /// ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° route mappings ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  /// ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ setup ‡∏ï‡∏≠‡∏ô initialization
  ///
  /// Parameters:
  /// - [routes]: Map ‡∏Ç‡∏≠‡∏á moduleId -> route
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// service.registerModuleRoutes({
  ///   'payment': '/payment',
  ///   'profile': '/profile',
  ///   'settings': '/settings',
  ///   'help': '/help'
  /// });
  /// ```
  void registerModuleRoutes(Map<String, String> routes) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° routes ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ map
    _moduleRoutes.addAll(routes);

    // Log ‡πÅ‡∏ï‡πà‡∏•‡∏∞ route ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
    routes.forEach((moduleId, route) {
      debugPrint('üìù Registered route for $moduleId: $route');
    });
  }

  // ============================================
  // Query Methods
  // ============================================

  /// ‡∏î‡∏∂‡∏á routes ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (read-only)
  ///
  /// Returns:
  /// Unmodifiable map ‡∏Ç‡∏≠‡∏á routes ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
  /// ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  ///
  /// ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
  /// - Debugging
  /// - ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ modules ‡∏ó‡∏µ‡πà‡∏°‡∏µ
  /// - Validation
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// final routes = service.registeredRoutes;
  /// print('Available modules: ${routes.keys}');
  /// ```
  Map<String, String> get registeredRoutes => Map.unmodifiable(_moduleRoutes);

  /// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ module ‡∏ñ‡∏π‡∏Å‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  ///
  /// Parameters:
  /// - [moduleId]: ID ‡∏Ç‡∏≠‡∏á module ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
  ///
  /// Returns:
  /// true ‡∏ñ‡πâ‡∏≤ module ‡∏°‡∏µ route ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô, false ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
  ///
  /// ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
  /// - Validation ‡∏Å‡πà‡∏≠‡∏ô navigate
  /// - ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô UI elements
  /// - Feature flags
  ///
  /// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
  /// ```dart
  /// if (service.isModuleRegistered('payment')) {
  ///   showPaymentButton();
  /// } else {
  ///   showComingSoonMessage();
  /// }
  /// ```
  bool isModuleRegistered(String moduleId) => _moduleRoutes.containsKey(moduleId);

  // ============================================
  // Private Helper Methods
  // ============================================

  /// Default navigation implementation
  ///
  /// Method ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô placeholder ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö default navigation
  /// Host app ‡∏Ñ‡∏ß‡∏£ provide custom handler ‡∏´‡∏£‡∏∑‡∏≠ override method ‡∏ô‡∏µ‡πâ
  ///
  /// Parameters:
  /// - [moduleId]: ID ‡∏Ç‡∏≠‡∏á module
  /// - [route]: Route ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
  /// - [data]: Navigation data
  ///
  /// Note: Method ‡∏ô‡∏µ‡πâ‡∏à‡∏∞ print warning ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  /// Host app ‡∏ï‡πâ‡∏≠‡∏á implement navigation logic ‡∏à‡∏£‡∏¥‡∏á
  void _defaultNavigation(String moduleId, String route, Map<String, dynamic> data) {
    debugPrint('‚ö†Ô∏è Using default navigation - host app should override this');

    // Host app ‡∏Ñ‡∏ß‡∏£:
    // 1. ‡πÉ‡∏ä‡πâ Navigator.pushNamed(context, route, arguments: data)
    // 2. ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ custom navigation solution (go_router, auto_route, etc.)
    // 3. ‡∏´‡∏£‡∏∑‡∏≠ handle ‡∏î‡πâ‡∏ß‡∏¢ state management
  }

  /// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏ì‡∏µ module ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å
  ///
  /// Method ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° navigate ‡πÑ‡∏õ module
  /// ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ route ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
  ///
  /// Parameters:
  /// - [moduleId]: ID ‡∏Ç‡∏≠‡∏á module ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å
  /// - [data]: Navigation data
  ///
  /// Host app ‡∏Ñ‡∏ß‡∏£:
  /// - ‡πÅ‡∏™‡∏î‡∏á error message
  /// - Navigate ‡πÑ‡∏õ fallback page
  /// - Log error ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö monitoring
  void _handleUnknownModule(String moduleId, Map<String, dynamic> data) {
    debugPrint('‚ùå Unknown module navigation: $moduleId');

    // Host app ‡∏Ñ‡∏ß‡∏£ handle ‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏µ‡πâ ‡πÄ‡∏ä‡πà‡∏ô:
    // - ‡πÅ‡∏™‡∏î‡∏á 404 page
    // - ‡πÅ‡∏™‡∏î‡∏á error dialog
    // - Redirect ‡πÑ‡∏õ home page
    // - Log to crash reporting service
  }
}

// ============================================
// ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô HostNavigationService
// ============================================
//
// Service ‡∏ô‡∏µ‡πâ‡∏°‡∏µ 2 ‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
//
// **‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà 1: Route Registration**
// ```dart
// final service = HostNavigationService();
// 
// // ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô routes
// service.registerModuleRoutes({
//   'payment': '/payment',
//   'profile': '/profile'
// });
// 
// // Navigate
// service.navigateToModule('payment', {'orderId': '123'});
// ```
//
// **‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà 2: Custom Handler**
// ```dart
// final service = HostNavigationService(
//   customHandler: (moduleId, data) {
//     // Custom logic
//     switch(moduleId) {
//       case 'payment':
//         if (userIsLoggedIn) {
//           Navigator.pushNamed(context, '/payment', arguments: data);
//         } else {
//           Navigator.pushNamed(context, '/login');
//         }
//         break;
//       default:
//         showErrorDialog('Unknown module: $moduleId');
//     }
//   }
// );
// ```
//
// **Integration with Provider:**
// ```dart
// // ‡∏ó‡∏µ‡πà root ‡∏Ç‡∏≠‡∏á app
// HostNavigatorProvider(
//   navigationService: service,
//   child: MyApp()
// )
// ```
//
// Service ‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ flexibility ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ navigation
// ‡πÇ‡∏î‡∏¢ host app ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö architecture
